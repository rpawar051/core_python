		==============================================
						 tuple
		==============================================
=>' tuple' is a pre-defined class and it is treated as data type.
=>The purpose of  tuple data type is that  To Store Multiple Values either of Same Type or	            Different Type or both types with Unique and Duplicates"
=>An object of  tuple maintains Insertion order (or) Preserves Insertion Order 
=>The elements of  tuple must be written (or) reprsented within braces ( ) and  the elements	must be separated by comma 

		Syntax:-     varname=( val1,val2...val-n )
						(or)
				   varname= val1,val2...val-n			

=>On the object of tuple, we can perform both indexing and slicing operations.
=>An object oftuple belongs to immutable
=>To convert one Possible type of value into tuple type value , we use tuple()
=>We have two types of tuple objects. They are 
			a) empty tuple
			b) non-empty tuple
=>An empty tuple does not contain any elements and length is 0

		Syntax:-      varname=()
					(or)
				   varname=tuple()

Note:- The functionality of tuple is exactly similar to the functionality of list But an object of tuple belongs to immutable and an object of list belongs to mutable.
----------------------------------------------------------------------------------------------------------------------
Examples:
-----------------
>>> t=(10,20,30.5,10,40-34)
>>> print(t)----------------------(10, 20, 30.5, 10, 6)
>>> print(type(t))-------------<class 'tuple'>
>>> t1=(10,"KVR",67.89,"OUCET")
>>> print(t1)------------(10, 'KVR', 67.89, 'OUCET')
>>> print(type(t1))---------------<class 'tuple'>
>>> t2=12,"Rossum",34.78,"python"
>>> print(t2)-----------(12, 'Rossum', 34.78, 'python')
>>> print(type(t2))---------<class 'tuple'>
>>> print(t2[1])-----------Rossum
>>> print(t2[1:4])-------------('Rossum', 34.78, 'python')
>>> print(id(t2))-------------1813965627200
>>> t2[0]=120------------TypeError: 'tuple' object does not support item assignment
>>> t3=()
>>> print(t3)----------()
>>> print(type(t3))-------<class 'tuple'>
>>> t4=tuple()
>>> print(t4)-----------()
>>> print(type(t4))---------<class 'tuple'>
-------------------------------------------------------------------------------------------------
Inner / nested tuple 
-------------------------------
>>> t5=(10,"RAM",(12,14,20,18),(45,67,78,55),"OUCET")
>>> print(t5)-----(10, 'RAM', (12, 14, 20, 18), (45, 67, 78, 55), 'OUCET')
>>> print(type(t5))-----<class 'tuple'>
>>> t5=(10,"RAM",[12,14,20,18],(45,67,78,55),"OUCET")
>>> print(t5)--------(10, 'RAM', [12, 14, 20, 18], (45, 67, 78, 55), 'OUCET')
>>> print(type(t5))-------<class 'tuple'>
>>> t5[2].append(10)
>>> print(t5)------------(10, 'RAM', [12, 14, 20, 18, 10], (45, 67, 78, 55), 'OUCET')
>>> t5[3].append(10)----------AttributeError: 'tuple' object has no attribute 'append'
-------------------------------------------------------------------------------------------------------------------------
Function in tuple:
----------------------------
Tuple object contains the following functions only.
		1)  count()        2)     index()

---------------------------------------------------------------------------------
tuple object does not contain the following Functions:
----------------------------------------------------------------------------------
append()
insert()
clear()
remove()
pop(index)
pop()
extend()
copy() (Shallow copy not permitted but deep copy  allowed )
reverse()
sort()
-----------------------------------------------------------------------------------------------