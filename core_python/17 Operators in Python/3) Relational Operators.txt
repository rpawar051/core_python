		=========================================
				3) Relational Operators
		=========================================
=>The purpose of Relational Operators is that "To Compare two values"
=>If two variables (objects) are connected with any relational operator then it is called                "Relational Expression".
=>The result of Relational Expression is either True or False.
=>All the Relational Exporession are called Test Conditions and gives Either True or False.
=>The following Tables Gives List of Relational Expressions.
========================================================================
Slno		Symbol			Meaning			Examples:   a=10 , b=20
========================================================================
  1.               >			greater Than			print(a>b)------------False
										print(b>a)------------True

  2.		   <			Less Than			print(a<b)---------->True
										print(b<a)---------->False

  3.		   ==                Equality Operator            print(a==b)------->False
                                       (double equal to)		print(a==10)----->True

  4.		   !=			not equal to			print(a!=b)------->True
										print(a!=10)----->False

  5.		 >=			Greater Than			print(a>=b)----->False
                                        or equal to			print(b>=a)---->True

  6.	         <=			Less Than			print(a<=b)------>True
  					or equal to			print(a<=8)----->False

========================================================================
Examples:
---------------------
#RelOpEx.py
a=int(input("Enter Value of a:"))
b=int(input("Enter Value of b:"))
print("----------------------------------------------------")
print("\tResults of Relational Operators:")
print("----------------------------------------------------")
print("\t{} > {}---->{}".format(a,b,a>b) )
print("\t{} < {}---->{}".format(a,b,a<b))
print("\t{} == {}---->{}".format(a,b,a==b))
print("\t{} != {}---->{}".format(a,b,a!=b))
print("\t{} >= {}---->{}".format(a,b,a>=b))
print("\t{} <= {}---->{}".format(a,b,a<=b))
print("----------------------------------------------------")



