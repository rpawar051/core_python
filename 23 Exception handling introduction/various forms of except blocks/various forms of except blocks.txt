		===========================================
				Various forms of except blocks
		===========================================
Form1:
----------
=>This form makes us to understand the except can handle one exception at a time
=>Syntax:-
		try:
		    ------------------
		    ------------------
		except  <exception-class-name>
		     -----------------------
		     -----------------------
===============================================================
Form2:
----------
=>This form makes us to understand the except can handle more than one exception at a time
=>Syntax:-
		try:
		    ------------------
		    ------------------
		except  ( exception-class-name-1, exception-class-name-2...exception-class-name-n):
		     -----------------------
		     -----------------------
Examples:
----------------
#div22.py
# This program accepts two integer values from key board and compute their division
s1=input("Enter First Number:")
s2=input("Enter Second Number:")
#convert s1 and s2 into  int type
try:
	a=int(s1)  
	b=int(s2) 
	c=a/b    
except ( ZeroDivisionError, ValueError):
	print("\nDon't Enter Zero for Den...")
	print("\nDon't Enter strs / alpha-numrics / special symbols")
else:
	print("Val of a={}".format(a))
	print("Val of b={}".format(b))
	print("Division={}".format(c))
finally:
	print("i am fom finally block")
=====================================================================
Form-3:
-------------
=>This form makes us to understand the except can handle one exception at a time with alias name and that alias name displays the original message caused by exception class (Technical Error message)

=>Syntax:-
		try:
		    ------------------
		    ------------------
		except  <exception-class-name> as alias name
		     -----------------------
		     -----------------------

------------------
Examples:
------------------
#div23.py
# This program accepts two integer values from key board and compute their division
s1=input("Enter First Number:")
s2=input("Enter Second Number:")
#convert s1 and s2 into  int type
try:
	a=int(s1)  
	b=int(s2) 
	c=a/b    
except  ZeroDivisionError as zd:
	print(zd)
except ValueError as ve :
	print(ve)
else:
	print("Val of a={}".format(a))
	print("Val of b={}".format(b))
	print("Division={}".format(c))
finally:
	print("i am fom finally block")
==================================X================================
Form4:
----------
=>This form makes us to understand the except can handle any exception at a time.
=>This form is not recommended bcoz it is not able to give specific error messages.
=>Syntax:-
		try:
		    ------------------
		    ------------------
		except :
		     -----------------------
		     -----------------------
---------------------
Examples:
---------------------
#div24.py
# This program accepts two integer values from key board and compute their division
s1=input("Enter First Number:")
s2=input("Enter Second Number:")
#convert s1 and s2 into  int type
try:
	a=int(s1)  
	b=int(s2) 
	c=a/b    
except    :
	print("exception occured:")
else:
	print("Val of a={}".format(a))
	print("Val of b={}".format(b))
	print("Division={}".format(c))
finally:
	print("i am fom finally block")